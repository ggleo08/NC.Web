{
  "ConnectionStrings": {
    "AIDOINConnection": "Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=NCWeb;Integrated Security=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False",
    "DefaultConnection": "Data Source=LL2019;Initial Catalog=NCWeb;User Id=sa;Password=Password01!;"
  },
  "Tokens": {
    "Key": "C428A377979E395725A6A1A13A0CE0D25F1B30B7DAE0EFB06F26F79EDC149472",
    "Lifetime": "86400",
    "Issuer": "http://localhost:5000",
    "Audience": "http://localhost:4000"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Warning"
    }
  },
  "AllowedHosts": "*",

  "Add-Migration": "Add-Migration InitNCWeb -Project NC.Core  -Context CTX",
  "Update-Database": "Update-Database -Project NC.Core -Context CTX"

  //"Add-Migration": "Add-Migration InitialCreate -Project NC.Identity  -Context ApplicationUserDbContext",
  //"Update-Database": "Update-Database -Project NC.Identity -Context ApplicationUserDbContext"

  /*
    ***   EF 数据迁移命令备注   ***
    
    // 通用参数
    xxx-Migration -Project <项目名称> -Context <DBContext 类>

    // 添加新的迁移
    Add-Migration -[迁移名称] -[保存路径(目标项目相对路径,默认为 /Migrations)]

    // 更新数据库，到最后一个迁移或指定的迁移。 
    Update-Database -[目标迁移]

    // 删除 （请回滚迁移已完成的代码更改） 的最后一个迁移。 
    Remove-Migration -Force(还原迁移)

    // 删除数据库
    Drop-Database -WhatIf 显示哪个数据库会被丢弃，但没有删除它
    
    // 生成应用的所有更改，从一个所选迁移到理解过一个所选迁移的SQL脚本
    Script-Migration -[From 迁移] -[To 迁移] -Idempotent(生成脚本，可以在任何迁移的数据库上使用) -[Output 要将结果写入的文件]

    // 根据指定数据库生成 DbContext 和实体类型代码，数据库表必须具有主键命令方有效
    Scaffold-DbContext
      -Connection <String>  数据库链接字符串
      -Provider <String>    要使用的提供程序。 通常这是 NuGet 包的名称为例： Microsoft.EntityFrameworkCore.SqlServer
      -OutputDir <String>	  要将文件放入的目录。 目标项目的相对路径。
      -ContextDir <String>	要放置DbContext文件的目录。 目标项目的相对路径。
      -Context <String>	    要生成的DbContext类名称。
      -Schemas <String[]>   要生成的实体类型的模式(又称架构)。 如果省略此参数会生成所有模式
      -Tables <String[]>    要生成的实体类型的表。 如果省略此参数则会生成所有表
      -DataAnnotations	    特性用于将模型配置 （如果可能）。 如果省略此参数，则使用仅 fluent API。
      -UseDatabaseNames	在数据库中显示的完全相同，请使用表和列的名称。 如果省略此参数，则会更改数据库名称，使其更紧密地符合 C# 名称样式约定。
      -Force	覆盖现有文件。
      
  */
}


