<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <!-- This section contains the log4net configuration settings -->
  <log4net>
    <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout" value="%date [%thread] %-5level %logger - %message%newline" />
    </appender>

    <!--<appender name="FileAppender" type="log4net.Appender.FileAppender">
      <file value="log-file.log" />
      <appendToFile value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
      </layout>
    </appender>-->

    <appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
      <!--日志路径-->
      <file value="App_Log/logs/" />
      <!--是否是向文件中追加日志-->
      <appendToFile value="true" />
      <!--日志滚动方式 Date Composite-->
      <rollingStyle value="Composite" />
      <!--日志文件名是否是固定不变的-->
      <staticLogFileName value="false" />
      <!--日志文件名格式为:2008-08-31-12.log-->
      <datePattern value="yyyy-MM-dd'.log'" />
      <!--log保留天数-->
      <maxSizeRollBackups value="10" />
      <!--每个log文件最大是1M，如果超过1M将重新创建一个新的log文件，并将原来的log文件备份。-->
      <maximumFileSize value="1MB" />
      <layout type="log4net.Layout.PatternLayout">
        <!--<conversionPattern value="%date{HH:mm:ss,fff} [%thread] %-5level %logger [%property{NDC}] - %message%newline" />-->
        <conversionPattern value="[%thread] %-5level %date{HH:mm:ss,fff} - %message%newline" />
      </layout>
    </appender>
    <!-- 控制台前台显示日志 -->
    <appender name="ManagedColoredConsoleAppender" type="log4net.Appender.ManagedColoredConsoleAppender">
      <mapping>
        <level value="ERROR" />
        <foreColor value="Red" />
      </mapping>
      <mapping>
        <level value="Info" />
        <foreColor value="Green" />
      </mapping>
      <mapping>
        <level value="DEBUG" />
        <foreColor value="Blue" />
      </mapping>
      <mapping>
        <level value="WARN" />
        <foreColor value="Yellow" />
      </mapping>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%n%date{HH:mm:ss,fff} [%-5level] %m" />
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="DEBUG" />
        <param name="LevelMax" value="Fatal" />
      </filter>
    </appender>
    <!-- Setup the root category, add the appenders and set the default level -->
 
    <root>
      <level value="ALL" />
      <appender-ref ref="ConsoleAppender" />
      <!--<appender-ref ref="FileAppender" />-->
      <appender-ref ref="RollingLogFileAppender" />
    </root>

  </log4net>
</configuration>

<!--
日志类别
  FATAL（致命错误）、ERROR（一般错误）、WARN（警告）、INFO（一般信息）、DEBUG（调试信息）。
文本参数说明
  %m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息
  %n(new line):换行
  %d(datetime):输出当前语句运行的时刻
  %r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数
  %t(thread id):当前语句所在的线程ID 等同于 %thread
  %p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等
  %c(class):当前日志对象的名称，例如：
  模式字符串为：%-10c -%m%n
  代码为：
  ILog log=LogManager.GetLogger(“Exam.Log”);
  log.Debug(“Hello”);
  则输出为下面的形式：
  Exam.Log       - Hello
  %L：输出语句所在的行号
  %F：输出语句所在的文件名
  %-数字：表示该项的最小长度，如果不够，则用空格填充
  %newline: 错误详情
  %message: 自定义输出信息
  %logger: 类
  %property: 属性
-->