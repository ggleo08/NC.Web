// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NC.Core.Database;

namespace NC.Core.Migrations
{
    [DbContext(typeof(CTX))]
    partial class CTXModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NC.Model.EntityModels.Blog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreateDate");

                    b.Property<Guid?>("CreateUserId");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<Guid?>("ModifyUserId");

                    b.Property<int?>("Status");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("Blog");
                });

            modelBuilder.Entity("NC.Model.EntityModels.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BlogId");

                    b.Property<Guid?>("BlogId1");

                    b.Property<string>("Content");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<Guid?>("CreateUserId");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<Guid?>("ModifyUserId");

                    b.Property<int?>("Status");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("BlogId1");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("NC.Model.EntityModels.SysRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<Guid?>("CreateUserId");

                    b.Property<string>("Description");

                    b.Property<bool?>("IsDefault");

                    b.Property<bool?>("IsSystem");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<Guid?>("ModifyUserId");

                    b.Property<string>("Name");

                    b.Property<string>("NormalizedName");

                    b.Property<int?>("Status");

                    b.HasKey("Id");

                    b.ToTable("SysRole");
                });

            modelBuilder.Entity("NC.Model.EntityModels.SysUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<Guid?>("CreateUserId");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<Guid?>("ModifyUserId");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<int?>("Status");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("SysUser");
                });

            modelBuilder.Entity("NC.Model.EntityModels.Post", b =>
                {
                    b.HasOne("NC.Model.EntityModels.Blog", "Blog")
                        .WithMany("Posts")
                        .HasForeignKey("BlogId1");
                });
#pragma warning restore 612, 618
        }
    }
}
